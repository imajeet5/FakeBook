[{"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\index.js":"1","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\reportWebVitals.js":"2","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\App.js":"3","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\About.js":"4","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Header.js":"5","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Terms.js":"6","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Footer.js":"7","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HomeGuest.js":"8","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Page.js":"9","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Container.js":"10","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HeaderLoggedOut.js":"11","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HeaderLoggedIn.js":"12","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Home.js":"13","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\CreatePost.js":"14","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ViewSinglePost.js":"15","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\FlashMessages.js":"16","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\contexts\\DispatchContext.js":"17","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\contexts\\StateContext.js":"18","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Profile.js":"19","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfilePost.js":"20","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\LoadingDotsIcon.js":"21","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\EditPost.js":"22","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\NotFound.js":"23","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Search.js":"24","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfileFollowers.js":"25","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfileFollowing.js":"26","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Post.js":"27","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Chat.js":"28"},{"size":563,"mtime":1607926512153,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1607926512152,"results":"31","hashOfConfig":"30"},{"size":4225,"mtime":1607929109908,"results":"32","hashOfConfig":"30"},{"size":1506,"mtime":1607926512050,"results":"33","hashOfConfig":"30"},{"size":821,"mtime":1607926512058,"results":"34","hashOfConfig":"30"},{"size":1496,"mtime":1607926512082,"results":"35","hashOfConfig":"30"},{"size":796,"mtime":1607926512057,"results":"36","hashOfConfig":"30"},{"size":3226,"mtime":1607926512078,"results":"37","hashOfConfig":"30"},{"size":326,"mtime":1607926512079,"results":"38","hashOfConfig":"30"},{"size":230,"mtime":1607926512050,"results":"39","hashOfConfig":"30"},{"size":1764,"mtime":1607926512070,"results":"40","hashOfConfig":"30"},{"size":1972,"mtime":1607928871653,"results":"41","hashOfConfig":"30"},{"size":2165,"mtime":1607926512071,"results":"42","hashOfConfig":"30"},{"size":2186,"mtime":1607926512051,"results":"43","hashOfConfig":"30"},{"size":3979,"mtime":1607926512092,"results":"44","hashOfConfig":"30"},{"size":368,"mtime":1607926512056,"results":"45","hashOfConfig":"30"},{"size":119,"mtime":1607926512107,"results":"46","hashOfConfig":"30"},{"size":115,"mtime":1607926512108,"results":"47","hashOfConfig":"30"},{"size":6485,"mtime":1607926512080,"results":"48","hashOfConfig":"30"},{"size":1093,"mtime":1607926512081,"results":"49","hashOfConfig":"30"},{"size":183,"mtime":1607926512078,"results":"50","hashOfConfig":"30"},{"size":6821,"mtime":1607926512056,"results":"51","hashOfConfig":"30"},{"size":471,"mtime":1607926512078,"results":"52","hashOfConfig":"30"},{"size":5000,"mtime":1607926512081,"results":"53","hashOfConfig":"30"},{"size":2325,"mtime":1607926512080,"results":"54","hashOfConfig":"30"},{"size":1970,"mtime":1607926512080,"results":"55","hashOfConfig":"30"},{"size":778,"mtime":1607926512079,"results":"56","hashOfConfig":"30"},{"size":4439,"mtime":1607942032432,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"s6bn5i",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\index.js",[],["123","124"],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\reportWebVitals.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\App.js",["125"],"import React, { useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { useImmerReducer } from 'use-immer';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './App.css';\r\nimport About from './components/About';\r\nimport CreatePost from './components/CreatePost';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport HomeGuest from './components/HomeGuest';\r\nimport Terms from './components/Terms';\r\nimport ViewSinglePost from './components/ViewSinglePost';\r\nimport FlashMessages from './components/FlashMessages';\r\n\r\nimport StateContext from './contexts/StateContext';\r\nimport DispatchContext from './contexts/DispatchContext';\r\nimport Profile from './components/Profile';\r\nimport EditPost from './components/EditPost';\r\nimport NotFound from './components/NotFound';\r\nimport Search from './components/Search';\r\nimport Chat from './components/Chat';\r\n\r\nAxios.defaults.baseURL = 'http://localhost:8080';\r\n\r\nfunction App() {\r\n  // we can move this code by creating a wrapper component for the provider\r\n  const initialState = {\r\n    loggedIn: Boolean(localStorage.getItem('userToken')),\r\n    flashMessages: [],\r\n    user: {\r\n      token: localStorage.getItem('userToken'),\r\n      username: localStorage.getItem('userName'),\r\n      avatar: localStorage.getItem('userAvatar'),\r\n    },\r\n    isSearchOpen: false,\r\n    isChatOpen: false,\r\n  };\r\n\r\n  function ourReducer(draft, action) {\r\n    switch (action.type) {\r\n      case 'login':\r\n        draft.loggedIn = true;\r\n        draft.user = action.data;\r\n        break;\r\n      case 'logout':\r\n        draft.loggedIn = false;\r\n        break;\r\n      case 'flashMessage':\r\n        draft.flashMessages.push(action.value);\r\n        break;\r\n      case 'openSearch':\r\n        draft.isSearchOpen = true;\r\n        return;\r\n      case 'closeSearch':\r\n        draft.isSearchOpen = false;\r\n        return;\r\n      case 'toggleChat':\r\n        draft.isChatOpen = !draft.isChatOpen;\r\n        return;\r\n      case 'closeChat':\r\n        draft.isChatOpen = false;\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    if (state.loggedIn) {\r\n      localStorage.setItem('userToken', state.user.token);\r\n      localStorage.setItem('userName', state.user.username);\r\n      localStorage.setItem('userAvatar', state.user.avatar);\r\n    } else {\r\n      localStorage.removeItem('userToken', state.user.token);\r\n      localStorage.removeItem('userName', state.user.username);\r\n      localStorage.removeItem('userAvatar', state.user.avatar);\r\n    }\r\n  }, [state.loggedIn]);\r\n\r\n  return (\r\n    <StateContext.Provider value={state}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        <BrowserRouter>\r\n          <FlashMessages messages={state.flashMessages} />\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/profile/:username\">\r\n              <Profile />\r\n            </Route>\r\n\r\n            <Route path=\"/\" exact>\r\n              {state.loggedIn ? <Home /> : <HomeGuest />}\r\n            </Route>\r\n            <Route path=\"/post/:id\" exact>\r\n              <ViewSinglePost />\r\n            </Route>\r\n            <Route path=\"/post/:id/edit\" exact>\r\n              <EditPost />\r\n            </Route>\r\n\r\n            <Route path=\"/create-post\">\r\n              <CreatePost />\r\n            </Route>\r\n            <Route path=\"/about-us\" exact>\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/terms\" exact>\r\n              <Terms />\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n          <CSSTransition\r\n            timeout={300}\r\n            in={state.isSearchOpen}\r\n            classNames=\"search-overlay\"\r\n            unmountOnExit\r\n          >\r\n            <Search />\r\n          </CSSTransition>\r\n          <Chat />\r\n          <Footer />\r\n        </BrowserRouter>\r\n      </DispatchContext.Provider>\r\n    </StateContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/**\r\n *  <About/>\r\n    <Terms/>\r\n    <HomeGuest />\r\n */\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\About.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Header.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Terms.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Footer.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HomeGuest.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Page.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Container.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HeaderLoggedOut.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\HeaderLoggedIn.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Home.js",["126"],"import Axios from 'axios';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useImmer } from 'use-immer';\r\nimport StateContext from '../contexts/StateContext';\r\nimport LoadingDotsIcon from './LoadingDotsIcon';\r\nimport Page from './Page';\r\nimport Post from './Post';\r\n\r\nexport default function Home() {\r\n  const appState = useContext(StateContext);\r\n  const [state, setState] = useImmer({\r\n    isLoading: true,\r\n    feed: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const ourRequest = Axios.CancelToken.source();\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await Axios.post(\r\n          '/getHomeFeed',\r\n          { token: appState.user.token },\r\n          { cancelToken: ourRequest.token }\r\n        );\r\n        setState((draft) => {\r\n          draft.isLoading = false;\r\n          draft.feed = response.data;\r\n        });\r\n      } catch (e) {\r\n        console.log('There was a problem.');\r\n      }\r\n    }\r\n    fetchData();\r\n    return () => {\r\n      ourRequest.cancel();\r\n    };\r\n  }, []);\r\n\r\n  if (state.isLoading) {\r\n    return <LoadingDotsIcon />;\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Your Feed\">\r\n      {state.feed.length > 0 && (\r\n        <React.Fragment>\r\n          <h2 className=\"text-center mb-4\">The Latest From Those You Follow</h2>\r\n          <div className=\"list-group\">\r\n            {state.feed.map((post) => {\r\n              return <Post post={post} key={post._id} />;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n      {state.feed.length === 0 && (\r\n        <React.Fragment>\r\n          <h2 className=\"text-center\">\r\n            Hello <strong>{appState.user.username}</strong>, your feed is empty.\r\n          </h2>\r\n          <p className=\"lead text-muted text-center\">\r\n            Your feed displays the latest posts from the people you follow. If\r\n            you don&rsquo;t have any friends to follow that&rsquo;s okay; you\r\n            can use the &ldquo;Search&rdquo; feature in the top menu bar to find\r\n            content written by people with similar interests and then follow\r\n            them.\r\n          </p>\r\n        </React.Fragment>\r\n      )}\r\n    </Page>\r\n  );\r\n}\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\CreatePost.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ViewSinglePost.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\FlashMessages.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\contexts\\DispatchContext.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\contexts\\StateContext.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Profile.js",["127","128","129","130","131"],"import React, { useContext, useEffect } from 'react';\r\nimport Page from './Page';\r\nimport { useParams, NavLink, Switch, Route } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport StateContext from '../contexts/StateContext';\r\nimport ProfilePost from './ProfilePost';\r\nimport { useImmer } from 'use-immer';\r\nimport ProfileFollowers from './ProfileFollowers';\r\nimport ProfileFollowing from './ProfileFollowing';\r\n\r\nexport default function Profile() {\r\n  const { username } = useParams();\r\n  const appState = useContext(StateContext);\r\n  const [state, setState] = useImmer({\r\n    followActionLoading: false,\r\n    startFollowingRequestCount: 0, //just to trigger use effect\r\n    stopFollowingRequestCount: 0, // to trigger use effect\r\n    profileData: {\r\n      profileUsername: '...',\r\n      profileAvatar: 'https://gravatar.com/avatar/placeholder?s=128',\r\n      isFollowing: false,\r\n      counts: { postCount: '', followerCount: '', followingCount: '' },\r\n    },\r\n  });\r\n\r\n  // to fetch profile data whenever the username in Params changes\r\n  useEffect(() => {\r\n    const currentRequest = Axios.CancelToken.source();\r\n    async function fetchData() {\r\n      try {\r\n        const response = await Axios.post(\r\n          `/profile/${username}`,\r\n          {\r\n            token: appState.user.token,\r\n          },\r\n          { cancelToken: currentRequest.token }\r\n        );\r\n        setState((draft) => {\r\n          // either we need to return a new value or modify the draft\r\n          // we cannot do both\r\n          draft.profileData = response.data;\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n    return () => {\r\n      currentRequest.cancel();\r\n    };\r\n  }, [username]);\r\n\r\n  // to update the follower in db when ever follower is added\r\n  useEffect(() => {\r\n    if (state.startFollowingRequestCount) {\r\n      setState((draft) => {\r\n        draft.followActionLoading = true;\r\n      });\r\n      const currentRequest = Axios.CancelToken.source();\r\n\r\n      async function fetchData() {\r\n        try {\r\n          const response = await Axios.post(\r\n            `/addFollow/${state.profileData.profileUsername}`,\r\n            {\r\n              token: appState.user.token,\r\n            },\r\n            { cancelToken: currentRequest.token }\r\n          );\r\n          setState((draft) => {\r\n            draft.profileData.isFollowing = true;\r\n            draft.profileData.counts.followerCount++;\r\n            draft.followActionLoading = false;\r\n          });\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n      fetchData();\r\n      return () => {\r\n        currentRequest.cancel();\r\n      };\r\n    }\r\n  }, [state.startFollowingRequestCount, username]);\r\n\r\n  // to update the follower in db whenever the follower count decreases\r\n  useEffect(() => {\r\n    if (state.stopFollowingRequestCount) {\r\n      setState((draft) => {\r\n        draft.followActionLoading = true;\r\n      });\r\n\r\n      const ourRequest = Axios.CancelToken.source();\r\n\r\n      async function fetchData() {\r\n        try {\r\n          const response = await Axios.post(\r\n            `/removeFollow/${state.profileData.profileUsername}`,\r\n            { token: appState.user.token },\r\n            { cancelToken: ourRequest.token }\r\n          );\r\n          setState((draft) => {\r\n            draft.profileData.isFollowing = false;\r\n            draft.profileData.counts.followerCount--;\r\n            draft.followActionLoading = false;\r\n          });\r\n        } catch (e) {\r\n          console.log('There was a problem.');\r\n        }\r\n      }\r\n      fetchData();\r\n      return () => {\r\n        ourRequest.cancel();\r\n      };\r\n    }\r\n  }, [state.stopFollowingRequestCount]);\r\n\r\n  function startFollowing() {\r\n    setState((draft) => {\r\n      draft.startFollowingRequestCount++;\r\n    });\r\n  }\r\n\r\n  function stopFollowing() {\r\n    setState((draft) => {\r\n      draft.stopFollowingRequestCount++;\r\n    });\r\n  }\r\n\r\n  return (\r\n    /* eslint-disable */\r\n    <Page title=\"Profile\">\r\n      <h2>\r\n        <img\r\n          className=\"avatar-small\"\r\n          src={state.profileData.profileAvatar}\r\n          alt=\"Profile\"\r\n        />{' '}\r\n        {state.profileData.profileUsername}\r\n        {appState.loggedIn &&\r\n          !state.profileData.isFollowing &&\r\n          appState.user.username != state.profileData.profileUsername &&\r\n          state.profileData.profileUsername != '...' && (\r\n            <button\r\n              onClick={startFollowing}\r\n              disabled={state.followActionLoading}\r\n              className=\"btn btn-primary btn-sm ml-2\"\r\n            >\r\n              Follow <i className=\"fas fa-user-plus\"></i>\r\n            </button>\r\n          )}\r\n        {appState.loggedIn &&\r\n          state.profileData.isFollowing &&\r\n          appState.user.username != state.profileData.profileUsername &&\r\n          state.profileData.profileUsername != '...' && (\r\n            <button\r\n              onClick={stopFollowing}\r\n              disabled={state.followActionLoading}\r\n              className=\"btn btn-danger btn-sm ml-2\"\r\n            >\r\n              Stop Following <i className=\"fas fa-user-times\"></i>\r\n            </button>\r\n          )}\r\n      </h2>\r\n\r\n      <div className=\"profile-nav nav nav-tabs pt-2 mb-4\">\r\n        <NavLink\r\n          exact\r\n          to={`/profile/${state.profileData.profileUsername}`}\r\n          className=\"nav-item nav-link\"\r\n        >\r\n          Posts: {state.profileData.counts.postCount}\r\n        </NavLink>\r\n        <NavLink\r\n          to={`/profile/${state.profileData.profileUsername}/followers`}\r\n          className=\"nav-item nav-link\"\r\n        >\r\n          Followers: {state.profileData.counts.followerCount}\r\n        </NavLink>\r\n        <NavLink\r\n          to={`/profile/${state.profileData.profileUsername}/following`}\r\n          className=\"nav-item nav-link\"\r\n        >\r\n          Following: {state.profileData.counts.followingCount}\r\n        </NavLink>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/profile/:username\">\r\n          <ProfilePost />\r\n        </Route>\r\n        <Route path=\"/profile/:username/followers\">\r\n          <ProfileFollowers\r\n            followerCount={state.profileData.counts.followerCount}\r\n          />\r\n        </Route>\r\n        <Route path=\"/profile/:username/following\">\r\n          <ProfileFollowing\r\n            followerCount={state.profileData.counts.followerCount}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfilePost.js",["132"],"import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport LoadingDotsIcon from './LoadingDotsIcon';\r\nimport Post from './Post';\r\n\r\nexport default function ProfilePost() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  const { username } = useParams();\r\n\r\n  useEffect(() => {\r\n    const currentRequest = Axios.CancelToken.source();\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await Axios.get(`/profile/${username}/posts`, {\r\n          cancelToken: currentRequest.token,\r\n        });\r\n        setPosts(response.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchPosts();\r\n    return () => {\r\n      currentRequest.cancel();\r\n    };\r\n  }, [username]);\r\n\r\n  if (isLoading) return <LoadingDotsIcon />;\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      {posts.map((post) => (\r\n        <Post post={post} key={post._id} noAuthor/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\LoadingDotsIcon.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\EditPost.js",["133","134","135","136"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { useImmerReducer } from 'use-immer';\r\nimport Page from './Page';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport LoadingDotsIcon from './LoadingDotsIcon';\r\nimport StateContext from '../contexts/StateContext';\r\nimport DispatchContext from '../contexts/DispatchContext';\r\nimport NotFound from './NotFound';\r\n\r\nfunction EditPost() {\r\n  const appState = useContext(StateContext);\r\n  const appDispatch = useContext(DispatchContext);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const originalState = {\r\n    title: {\r\n      value: '',\r\n      hasErrors: false,\r\n      message: '',\r\n    },\r\n    body: {\r\n      value: '',\r\n      hasErrors: false,\r\n      message: '',\r\n    },\r\n    isFetching: true,\r\n    isSaving: false,\r\n    id,\r\n    sendCount: 0,\r\n    notFound: false,\r\n  };\r\n\r\n  function ourReducer(draft, action) {\r\n    switch (action.type) {\r\n      case 'fetchComplete':\r\n        draft.title.value = action.value.title;\r\n        draft.body.value = action.value.body;\r\n        draft.isFetching = false;\r\n        return;\r\n      case 'titleChange':\r\n        draft.title.hasErrors = false;\r\n        draft.title.value = action.value;\r\n        return;\r\n      case 'bodyChange':\r\n        draft.body.hasErrors = false;\r\n        draft.body.value = action.value;\r\n        return;\r\n      case 'submitRequest':\r\n        if (!draft.title.hasErrors && !draft.body.hasErrors) {\r\n          draft.sendCount++;\r\n        }\r\n        return;\r\n      case 'saveRequestStarted':\r\n        draft.isSaving = true;\r\n        return;\r\n      case 'saveRequestFinished':\r\n        draft.isSaving = false;\r\n        return;\r\n      case 'titleRules':\r\n        if (!action.value.trim()) {\r\n          draft.title.hasErrors = true;\r\n          draft.title.message = 'You must provide a title.';\r\n        }\r\n        return;\r\n      case 'bodyRules':\r\n        if (!action.value.trim()) {\r\n          draft.body.hasErrors = true;\r\n          draft.body.message = 'You must provide body content.';\r\n        }\r\n        return;\r\n      case 'notFound':\r\n        draft.notFound = true;\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useImmerReducer(ourReducer, originalState);\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    dispatch({ type: 'titleRules', value: state.title.value });\r\n    dispatch({ type: 'bodyRules', value: state.body.value });\r\n    // dispatch({ type: \"submitRequest\" })\r\n    if (!state.title.value || !state.body.value) {\r\n      appDispatch({ type: 'flashMessage', value: 'Enter correct values.' });\r\n    } else {\r\n      dispatch({ type: 'submitRequest' });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ourRequest = Axios.CancelToken.source();\r\n    async function fetchPost() {\r\n      try {\r\n        const response = await Axios.get(`/post/${id}`, {\r\n          cancelToken: ourRequest.token,\r\n        });\r\n        if (appState.user.username !== response.data.author.username) {\r\n          appDispatch({\r\n            type: 'flashMessage',\r\n            value: 'You do not have permission to edit that post.',\r\n          });\r\n          // redirect to homepage\r\n          history.push('/');\r\n        }\r\n        if (response.data) {\r\n          dispatch({ type: 'fetchComplete', value: response.data });\r\n        } else {\r\n          dispatch({ type: 'notFound' });\r\n        }\r\n      } catch (e) {\r\n        console.log('There was a problem or the request was cancelled.');\r\n      }\r\n    }\r\n    fetchPost();\r\n    return () => {\r\n      ourRequest.cancel();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (state.sendCount) {\r\n      dispatch({ type: 'saveRequestStarted' });\r\n      const ourRequest = Axios.CancelToken.source();\r\n      async function fetchPost() {\r\n        try {\r\n          const response = await Axios.post(\r\n            `/post/${id}/edit`,\r\n            {\r\n              title: state.title.value,\r\n              body: state.body.value,\r\n              token: appState.user.token,\r\n            },\r\n            { cancelToken: ourRequest.token }\r\n          );\r\n          dispatch({ type: 'saveRequestFinished' });\r\n          appDispatch({ type: 'flashMessage', value: 'Post was updated.' });\r\n        } catch (e) {\r\n          console.log('There was a problem or the request was cancelled.');\r\n        }\r\n      }\r\n      fetchPost();\r\n      return () => {\r\n        ourRequest.cancel();\r\n      };\r\n    }\r\n  }, [state.sendCount]);\r\n\r\n  if (state.notFound) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  if (state.isFetching)\r\n    return (\r\n      <Page title=\"...\">\r\n        <LoadingDotsIcon />\r\n      </Page>\r\n    );\r\n\r\n  return (\r\n    <Page title=\"Edit Post\">\r\n      <Link className=\"small font-weight-bold\" to={`/post/${state.id}`}>\r\n        &laquo; Back to post permalink\r\n      </Link>\r\n      <form className=\"mt-3\" onSubmit={submitHandler}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"post-title\" className=\"text-muted mb-1\">\r\n            <small>Title</small>\r\n          </label>\r\n          <input\r\n            onBlur={(e) =>\r\n              dispatch({ type: 'titleRules', value: e.target.value })\r\n            }\r\n            onChange={(e) =>\r\n              dispatch({ type: 'titleChange', value: e.target.value })\r\n            }\r\n            value={state.title.value}\r\n            autoFocus\r\n            name=\"title\"\r\n            id=\"post-title\"\r\n            className=\"form-control form-control-lg form-control-title\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {state.title.hasErrors && (\r\n            <div className=\"alert alert-danger small liveValidateMessage\">\r\n              {state.title.message}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\r\n            <small>Body Content</small>\r\n          </label>\r\n          <textarea\r\n            onBlur={(e) =>\r\n              dispatch({ type: 'bodyRules', value: e.target.value })\r\n            }\r\n            onChange={(e) =>\r\n              dispatch({ type: 'bodyChange', value: e.target.value })\r\n            }\r\n            name=\"body\"\r\n            id=\"post-body\"\r\n            className=\"body-content tall-textarea form-control\"\r\n            type=\"text\"\r\n            value={state.body.value}\r\n          />\r\n          {state.body.hasErrors && (\r\n            <div className=\"alert alert-danger small liveValidateMessage\">\r\n              {state.body.message}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" disabled={state.isSaving}>\r\n          Save Updates\r\n        </button>\r\n      </form>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default EditPost;\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\NotFound.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Search.js",["137"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useImmer } from 'use-immer';\r\nimport DispatchContext from '../contexts/DispatchContext';\r\nimport Post from './Post';\r\n\r\nfunction Search() {\r\n  const appDispatch = useContext(DispatchContext);\r\n\r\n  // useImmer is very similar to use state\r\n  // immer will make it easy to update one of the properties again in the future when we call set state\r\n  // using this we can have multiple properties in one state, instead of having five different states\r\n  // then immer makes it very easy to update one of those in an immutable fashion\r\n  const [state, setState] = useImmer({\r\n    searchTerm: '',\r\n    results: [],\r\n    show: 'neither',\r\n    requestCount: 0,\r\n  });\r\n\r\n  // for adding event listener when the component mounts\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', searchKeyPressHandler);\r\n    return () => document.removeEventListener('keyup', searchKeyPressHandler);\r\n  }, []);\r\n\r\n  // for listening to the search term and updating the state when the search term changes\r\n  // this will update the request count variable and set the loader to loading\r\n  useEffect(() => {\r\n    if (state.searchTerm.trim()) {\r\n      setState((draft) => {\r\n        draft.show = 'loading';\r\n      });\r\n      const delay = setTimeout(() => {\r\n        setState((draft) => {\r\n          draft.requestCount++;\r\n        });\r\n      }, 750);\r\n\r\n      return () => clearTimeout(delay);\r\n    } else {\r\n      setState((draft) => {\r\n        draft.show = 'neither';\r\n      });\r\n    }\r\n  }, [state.searchTerm]);\r\n\r\n  // this will run when request count changes\r\n  // after fetching the results this will set the result to state and set loader state to show\r\n  useEffect(() => {\r\n    if (state.requestCount) {\r\n      const ourRequest = Axios.CancelToken.source();\r\n      async function fetchResults() {\r\n        try {\r\n          const response = await Axios.post(\r\n            '/search',\r\n            { searchTerm: state.searchTerm },\r\n            { cancelToken: ourRequest.token }\r\n          );\r\n\r\n          setState((draft) => {\r\n            draft.results = response.data;\r\n            draft.show = 'results';\r\n          });\r\n        } catch (e) {\r\n          console.log('There was a problem or the request was cancelled.');\r\n        }\r\n      }\r\n      fetchResults();\r\n      return () => ourRequest.cancel();\r\n    }\r\n  }, [state.requestCount]);\r\n\r\n  function searchKeyPressHandler(e) {\r\n    if (e.keyCode === 27) {\r\n      appDispatch({ type: 'closeSearch' });\r\n    }\r\n  }\r\n\r\n  function handleInput(e) {\r\n    const value = e.target.value;\r\n    setState((draft) => {\r\n      draft.searchTerm = value;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-overlay\">\r\n      <div className=\"search-overlay-top shadow-sm\">\r\n        <div className=\"container container--narrow\">\r\n          <label htmlFor=\"live-search-field\" className=\"search-overlay-icon\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </label>\r\n          <input\r\n            autoFocus\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            id=\"live-search-field\"\r\n            className=\"live-search-field\"\r\n            placeholder=\"What are you interested in?\"\r\n            onChange={handleInput}\r\n          />\r\n          <span\r\n            onClick={() => appDispatch({ type: 'closeSearch' })}\r\n            className=\"close-live-search\"\r\n          >\r\n            <i className=\"fas fa-times-circle\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-overlay-bottom\">\r\n        <div className=\"container container--narrow py-3\">\r\n          <div\r\n            className={\r\n              'circle-loader ' +\r\n              (state.show === 'loading' ? 'circle-loader--visible' : '')\r\n            }\r\n          ></div>\r\n          <div\r\n            className={\r\n              'live-search-results ' +\r\n              (state.show === 'results' ? 'live-search-results--visible' : '')\r\n            }\r\n          >\r\n            {Boolean(state.results.length) ? (\r\n              <div className=\"list-group shadow-sm\">\r\n                <div className=\"list-group-item active\">\r\n                  <strong>Search Results</strong> ({state.results.length}{' '}\r\n                  {state.results.length > 1 ? 'items' : 'item'} found)\r\n                </div>\r\n                {state.results.map((post) => (\r\n                  <Post\r\n                    post={post}\r\n                    key={post._id}\r\n                    onClick={() => appDispatch({ type: 'closeSearch' })}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"alert alert-danger text-center shadow-sm\">\r\n                Sorry, we could not find any results for the search\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfileFollowers.js",[],"D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\ProfileFollowing.js",["138","139","140","141","142"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport LoadingDotsIcon from './LoadingDotsIcon';\r\nimport StateContext from '../contexts/StateContext';\r\n\r\nfunction ProfileFollowing({ followerCount }) {\r\n  const appState = useContext(StateContext);\r\n  const { username } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ourRequest = Axios.CancelToken.source();\r\n\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await Axios.get(`/profile/${username}/following`, {\r\n          cancelToken: ourRequest.token,\r\n        });\r\n        setPosts(response.data);\r\n        setIsLoading(false);\r\n      } catch (e) {\r\n        console.log('There was a problem.');\r\n      }\r\n    }\r\n    fetchPosts();\r\n    return () => {\r\n      ourRequest.cancel();\r\n    };\r\n  }, [username, followerCount]);\r\n\r\n  if (isLoading) return <LoadingDotsIcon />;\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      {posts.length > 0 &&\r\n        posts.map((follower, index) => {\r\n          return (\r\n            <Link\r\n              key={index}\r\n              to={`/profile/${follower.username}`}\r\n              className=\"list-group-item list-group-item-action\"\r\n            >\r\n              <img className=\"avatar-tiny\" src={follower.avatar} />{' '}\r\n              {follower.username}\r\n            </Link>\r\n          );\r\n        })}\r\n      {posts.length == 0 && appState.user.username == username && (\r\n        <p className=\"lead text-muted text-center\">\r\n          You aren&rsquo;t following anyone yet.\r\n        </p>\r\n      )}\r\n      {posts.length == 0 && appState.user.username != username && (\r\n        <p className=\"lead text-muted text-center\">\r\n          {username} isn&rsquo;t following anyone yet.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileFollowing;\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Post.js",["143"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Post(props) {\r\n  const post = props.post;\r\n  const date = new Date(post.createdDate);\r\n  const dateFormatted = `${\r\n    date.getMonth() + 1\r\n  }/${date.getDate()}/${date.getFullYear()}`;\r\n\r\n  return (\r\n    <Link\r\n      onClick={props.onClick}\r\n      to={`/post/${post._id}`}\r\n      className=\"list-group-item list-group-item-action\"\r\n    >\r\n      <img className=\"avatar-tiny\" src={post.author.avatar} alt=\"avatar\" />{' '}\r\n      <strong>{post.title}</strong>{' '}\r\n      <span className=\"text-muted small\">\r\n        {!props.noAuthor && <React.Fragment>by {post.author.username}</React.Fragment>} on {dateFormatted}{' '}\r\n      </span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","D:\\ActiveProjects\\LearningReact\\udemy-react-for-rest-of-us\\react-for-rest-of-us\\client\\src\\components\\Chat.js",["144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":82,"column":6,"nodeType":"153","endLine":82,"endColumn":22,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":38,"column":6,"nodeType":"153","endLine":38,"endColumn":8,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"155","line":51,"column":6,"nodeType":"153","endLine":51,"endColumn":16,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":63,"column":17,"nodeType":"160","messageId":"161","endLine":63,"endColumn":25},{"ruleId":"151","severity":1,"message":"162","line":84,"column":6,"nodeType":"153","endLine":84,"endColumn":50,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"159","line":97,"column":17,"nodeType":"160","messageId":"161","endLine":97,"endColumn":25},{"ruleId":"151","severity":1,"message":"162","line":116,"column":6,"nodeType":"153","endLine":116,"endColumn":39,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"165","line":3,"column":21,"nodeType":"160","messageId":"161","endLine":3,"endColumn":25},{"ruleId":"158","severity":1,"message":"166","line":1,"column":28,"nodeType":"160","messageId":"161","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"167","line":123,"column":6,"nodeType":"153","endLine":123,"endColumn":8,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"159","line":131,"column":17,"nodeType":"160","messageId":"161","endLine":131,"endColumn":25},{"ruleId":"151","severity":1,"message":"169","line":151,"column":6,"nodeType":"153","endLine":151,"endColumn":23,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"165","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":45,"column":15,"nodeType":"173","endLine":45,"endColumn":68},{"ruleId":"174","severity":1,"message":"175","line":50,"column":21,"nodeType":"176","messageId":"177","endLine":50,"endColumn":23},{"ruleId":"174","severity":1,"message":"175","line":50,"column":52,"nodeType":"176","messageId":"177","endLine":50,"endColumn":54},{"ruleId":"174","severity":1,"message":"175","line":55,"column":21,"nodeType":"176","messageId":"177","endLine":55,"endColumn":23},{"ruleId":"174","severity":1,"message":"178","line":55,"column":52,"nodeType":"176","messageId":"177","endLine":55,"endColumn":54},{"ruleId":"158","severity":1,"message":"179","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"180","line":24,"column":6,"nodeType":"153","endLine":24,"endColumn":27,"suggestions":"181"},{"ruleId":"151","severity":1,"message":"182","line":42,"column":6,"nodeType":"153","endLine":42,"endColumn":8,"suggestions":"183"},{"ruleId":"151","severity":1,"message":"184","line":49,"column":6,"nodeType":"153","endLine":49,"endColumn":26,"suggestions":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.user.avatar', 'state.user.token', and 'state.user.username'. Either include them or remove the dependency array.","ArrayExpression",["188"],"React Hook useEffect has missing dependencies: 'appState.user.token' and 'setState'. Either include them or remove the dependency array.",["189"],["190"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'appState.user.token', 'setState', and 'state.profileData.profileUsername'. Either include them or remove the dependency array.",["191"],["192"],"'Link' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'appDispatch', 'appState.user.username', 'dispatch', 'history', and 'id'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'appDispatch', 'appState.user.token', 'dispatch', 'id', 'state.body.value', and 'state.title.value'. Either include them or remove the dependency array.",["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'appDispatch'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'appDispatch' and 'appState.isChatOpen'. Either include them or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [state.loggedIn, state.user.avatar, state.user.token, state.user.username]",{"range":"218","text":"219"},"Update the dependencies array to be: [appState.user.token, setState]",{"range":"220","text":"221"},"Update the dependencies array to be: [appState.user.token, setState, username]",{"range":"222","text":"223"},"Update the dependencies array to be: [appState.user.token, setState, state.profileData.profileUsername, state.startFollowingRequestCount, username]",{"range":"224","text":"225"},"Update the dependencies array to be: [appState.user.token, setState, state.profileData.profileUsername, state.stopFollowingRequestCount]",{"range":"226","text":"227"},"Update the dependencies array to be: [appDispatch, appState.user.username, dispatch, history, id]",{"range":"228","text":"229"},"Update the dependencies array to be: [appDispatch, appState.user.token, dispatch, id, state.body.value, state.sendCount, state.title.value]",{"range":"230","text":"231"},"Update the dependencies array to be: [appDispatch, appState.isChatOpen]",{"range":"232","text":"233"},"Update the dependencies array to be: [setState]",{"range":"234","text":"235"},"Update the dependencies array to be: [appDispatch, appState.isChatOpen, state.chatMessages]",{"range":"236","text":"237"},[2743,2759],"[state.loggedIn, state.user.avatar, state.user.token, state.user.username]",[1024,1026],"[appState.user.token, setState]",[1728,1738],"[appState.user.token, setState, username]",[2696,2740],"[appState.user.token, setState, state.profileData.profileUsername, state.startFollowingRequestCount, username]",[3683,3716],"[appState.user.token, setState, state.profileData.profileUsername, state.stopFollowingRequestCount]",[3640,3642],"[appDispatch, appState.user.username, dispatch, history, id]",[4491,4508],"[appDispatch, appState.user.token, dispatch, id, state.body.value, state.sendCount, state.title.value]",[776,797],"[appDispatch, appState.isChatOpen]",[1253,1255],"[setState]",[1477,1497],"[appDispatch, appState.isChatOpen, state.chatMessages]"]